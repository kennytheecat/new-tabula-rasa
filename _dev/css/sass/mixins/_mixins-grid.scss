/////////////////
// https://github.com/tylertate/semantic.gs/blob/master/stylesheets/scss/grid.scss
// https://dbwebb-se.github.io/semantic.gs/webroot/
/////////////////

// Creates a grid of a 102%. 
//Then strips off the last 2% gutter for a total of 100%
$column-width: 6.5%;
$gutter-width: 2%;
$columns: 12;

// Set $total-width to 102% for a fluid layout
$total-width: 100%;
$column-width: ((100 - ($ratio * ($columns - 1))) /12) * 1%;
$gutter-width: $ratio;


// Utility function â€” you should never need to modify this
@function gridsystem-width($columns:$columns) {
	@return ($column-width * $columns) + ($gutter-width * $columns);
}


// The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack/
@mixin clearfix() {
	*zoom:1;

	&:before,
	&:after {
	    content:"";
	    display:table;
	}
	&:after {
	    clear:both;
	}
}
//////////
// GRID //
//////////


@mixin row($columns:$columns) {
	display: block;
	width: $total-width*(($gutter-width + gridsystem-width($columns))/gridsystem-width($columns));
	margin: 0 $total-width*((($gutter-width*.5)/gridsystem-width($columns))*-1);
	@include clearfix();
}
@mixin column($x,$columns:$columns) {
	display: inline;
	float: left;
	width: $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns));
	//margin: 0 $total-width*(($gutter-width*.5)/gridsystem-width($columns));
	margin: 0 ($total-width*(($gutter-width*.5)/gridsystem-width($columns))) * 1%;
}
@mixin first() {
    margin-left: 0;
}
@mixin last() {
    margin-right: 0;
}
@mixin push($offset:1) {
	margin-left: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}
@mixin pull($offset:1) {
	margin-right: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}